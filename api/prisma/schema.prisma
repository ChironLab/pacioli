// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AccountType {
  ASSET
  LIABILITY
  EQUITY
  REVENUE
  EXPENSE
}

model ChartOfAccounts {
  id                Int            @id
  name              String
  account_type      AccountType
  entries           Entries[]
  account_groups_id Int?
  accountGroup      AccountGroups? @relation(fields: [account_groups_id], references: [id])
}

model AccountGroups {
  id           Int               @id
  name         String
  account_type AccountType
  accounts     ChartOfAccounts[]
}

model Journal {
  id              String            @id @default(uuid())
  updated_at      DateTime          @updatedAt
  locked          Boolean           @default(false)
  entries         Entries[]
  customerInvoice CustomerInvoices?
  vendorInvoice   VendorInvoices?
  receipt         Receipts?
  payment         Payments?
  adjustment      Adjustments?
}

model Entries {
  id                   String          @id @default(uuid())
  chart_of_accounts_id Int
  account              ChartOfAccounts @relation(fields: [chart_of_accounts_id], references: [id])
  journal_id           String
  journal              Journal         @relation(fields: [journal_id], references: [id])
  description          String?
  amount               Float
  updated_at           DateTime        @updatedAt
}

model Adjustments {
  id          Int     @id @default(autoincrement())
  description String
  journal_id  String
  journal     Journal @relation(fields: [journal_id], references: [id])
}

model Customers {
  id               Int                @id @default(autoincrement())
  name             String
  address          String?
  phone            String?
  customerInvoices CustomerInvoices[]
}

model CustomerInvoices {
  id           Int        @id @default(autoincrement())
  date         DateTime   @default(now())
  customers_id Int
  customer     Customers  @relation(fields: [customers_id], references: [id])
  journal_id   String
  journalEntry Journal    @relation(fields: [journal_id], references: [id])
  paid         Boolean    @default(false)
  receipts     Receipts[]
}

model Receipts {
  id                   Int              @id @default(autoincrement())
  customer_invoices_id Int
  customerInvoice      CustomerInvoices @relation(fields: [customer_invoices_id], references: [id])
  journal_id           String
  journalEntry         Journal          @relation(fields: [journal_id], references: [id])
  amount               Float
  date                 DateTime         @default(now())
  cleared              Boolean          @default(false)
}

model Vendors {
  id             Int              @id @default(autoincrement())
  name           String
  address        String?
  phone          String?
  ein            String?
  vendorInvoices VendorInvoices[]
}

model VendorInvoices {
  id           Int        @id @default(autoincrement())
  vendors_id   Int
  vendor       Vendors    @relation(fields: [vendors_id], references: [id])
  journal_id   String
  journalEntry Journal    @relation(fields: [journal_id], references: [id])
  date         DateTime   @default(now())
  paid         Boolean    @default(false)
  payments     Payments[]
}

model Payments {
  id                 Int            @id @default(autoincrement())
  vendor_invoices_id Int
  vendorInvoice      VendorInvoices @relation(fields: [vendor_invoices_id], references: [id])
  journal_id         String
  journalEntry       Journal        @relation(fields: [journal_id], references: [id])
  amount             Float
  date               DateTime       @default(now())
  cleared            Boolean        @default(false)
}
