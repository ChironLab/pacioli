### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""A single account, e.g. 1000 - Cash on hand. """
type Account {
  """Actively being used."""
  active: Boolean!

  """Related entries that make up the value."""
  entries(startAndEndDate: StartAndEndDate): [Entry]

  """Account id, range from 1000 - 9999"""
  id: Int!

  """Name of the account, e.g. cash"""
  name: String!

  """Type of the account, e.g. asset, liabilities."""
  type: AccountType!
}

"""Type of the account, e.g. asset, liabilities."""
enum AccountType {
  ASSET
  EQUITY
  EXPENSE
  LIABILITY
  REVENUE
}

"""Adjustments are manually posted to affect the trial balance."""
type Adjustment {
  description: String

  """Auto generated adjustment id using uuid."""
  id: ID!
  journal: Journal!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Entry {
  accountId: Int!
  amount: Float!
  id: ID!
  journalId: ID!
}

input EntryCreateInput {
  accountId: Int!
  amount: Float!
}

input EntryUpdateInput {
  accountId: Int!
  amount: Float!
  id: ID
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Journal {
  createdAt: DateTime!
  entries: [Entry]!
  id: ID!
  locked: Boolean!
  postedOn: DateTime!
  type: JournalType!
  updatedAt: DateTime!
}

enum JournalType {
  ADJUSTMENT
  TRANSACTION
}

type Mutation {
  createAdjustment(description: String!, entries: [EntryCreateInput!]!, postedOn: DateTime): Adjustment
  createBeginningBalance(entries: [EntryCreateInput!]!): Adjustment!
  createOrUpdateAccount(id: Int!, name: String!, type: AccountType!): Account
  createOrUpdateTransactor(id: ID, meta: JSON, name: String!, type: TransactorType!): Transactor
  createSpecialAccounts: Int!
  createTransaction(description: String!, entries: [EntryCreateInput!]!, postedOn: DateTime, transactorId: ID!, type: TransactionType!): Transaction
  deleteAccount(id: Int!): String
  deleteAdjustment(id: ID!): Adjustment
  deleteTransaction(id: ID!): Transaction
  deleteTransactor(id: ID!): Transactor
  updateAdjustment(description: String!, entries: [EntryUpdateInput!]!, id: ID!, postedOn: DateTime): Adjustment
  updateTransaction(description: String!, entries: [EntryUpdateInput!]!, id: ID!, postedOn: DateTime, transactorId: ID!, type: TransactionType!): Transaction
}

type Query {
  accounts(startAndEndDate: StartAndEndDate): [Account]
  adjustmentById(id: ID!): Adjustment
  adjustments(startAndEndDate: StartAndEndDate): [Adjustment]
  entries(startAndEndDate: StartAndEndDate): [Entry]
  journals(startAndEndDate: StartAndEndDate): [Journal]
  transactionById(id: ID!): Transaction
  transactions(startAndEndDate: StartAndEndDate): [Transaction]!
  transactors: [Transactor]!
}

input StartAndEndDate {
  endDate: DateTime
  startDate: DateTime
}

type Transaction {
  description: String
  id: ID!
  journal: Journal
  meta: JSON
  type: TransactionType!
}

enum TransactionType {
  CUSTOMER_INVOICE
  PAYMENT
  RECEIPT
  VENDOR_INVOICE
}

type Transactor {
  active: Boolean!
  id: ID!
  meta: JSON
  name: String!
  transactions(startAndEndDate: StartAndEndDate): [Transaction]
  type: TransactorType!
}

enum TransactorType {
  CUSTOMER
  VENDOR
}
