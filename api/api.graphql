### This file was generated by Nexus Schema
### Do not make changes to this file directly

interface Account {
  accountType: AccountType!
  active: Boolean!
  id: Int!
  name: String!
}

enum AccountType {
  ASSET
  EQUITY
  EXPENSE
  LIABILITY
  REVENUE
}

type AccountWithDetail implements Account {
  accountType: AccountType!
  active: Boolean!
  entries(startAndEndDate: StartAndEndDate): [Entry]!
  entryIds(startAndEndDate: StartAndEndDate): [ID]!
  id: Int!
  name: String!
}

type AccountWithNoDetail implements Account {
  accountType: AccountType!
  active: Boolean!
  id: Int!
  name: String!
}

type Adjustment {
  description: String
  id: ID!
  journal: Journal!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Entry {
  accountId: Int!
  amount: Float!
  id: ID!
  journalId: ID!
}

input EntryCreateInput {
  accountId: Int!
  amount: Float!
}

input EntryUpdateInput {
  accountId: Int!
  amount: Float!
  id: ID
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

interface Journal {
  createdAt: DateTime!
  id: ID!
  journalType: JournalType!
  locked: Boolean!
  postedOn: DateTime!
  updatedAt: DateTime!
}

enum JournalType {
  ADJUSTMENT
  TRANSACTION
}

type JournalWithEntries implements Journal {
  createdAt: DateTime!
  entries: [Entry]!
  id: ID!
  journalType: JournalType!
  locked: Boolean!
  postedOn: DateTime!
  updatedAt: DateTime!
}

type JournalWithEntryIds implements Journal {
  createdAt: DateTime!
  entryIds: [ID]!
  id: ID!
  journalType: JournalType!
  locked: Boolean!
  postedOn: DateTime!
  updatedAt: DateTime!
}

type JournalWithNoEntry implements Journal {
  createdAt: DateTime!
  id: ID!
  journalType: JournalType!
  locked: Boolean!
  postedOn: DateTime!
  updatedAt: DateTime!
}

type Mutation {
  createAdjustment(
    description: String!
    entries: [EntryCreateInput!]!
    postedOn: DateTime
  ): Adjustment
  createOrUpdateAccount(id: Int!, name: String!, type: AccountType!): Account
  deleteAccount(id: Int!): String
  deleteAdjustment(id: ID!): Adjustment
  firstTimeSetup: Int!
  updateAdjustment(
    description: String!
    entries: [EntryUpdateInput!]!
    id: ID!
    postedOn: DateTime
  ): Adjustment
}

type Query {
  accountsWithEntryIds(startAndEndDate: StartAndEndDate): [AccountWithDetail]
  accountsWithNoDetail: [AccountWithNoDetail]
  adjustmentById(id: ID!): Adjustment
  adjustments(startAndEndDate: StartAndEndDate): [Adjustment]
  journals(startAndEndDate: StartAndEndDate): [Journal]
}

input StartAndEndDate {
  endDate: DateTime
  startDate: DateTime
}
